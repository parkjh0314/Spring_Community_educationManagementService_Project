<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="ansehyeong">
	
	
	<!-- // 메인 화면에 뜨는 배너 광고를 올려준다. -->
	<select id="getBannerList" resultType="com.project.skyuniversity.ash.model.BannerVO">
		select ino, iname, ilink, status
	    from tbl_an_index_img
	    where status = 1
	</select>
	
	<select id="getIndexBoardList" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select boardNo, fk_boardKindNo, subject, categoryName
      from 
      (
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_notice b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
      union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_council b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_major b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_club b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_graduate b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_critic b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_study b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_cert b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_emp b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_joboffer b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from TBL_BOARD_lost b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_informal b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_polite b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from  tbl_board_humor b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_issue b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from  tbl_board_mbti b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_food b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_love b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from  tbl_board_hobby b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_health b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_diet b left join tbl_category c
      on b.fk_categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
       union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_housemarket b left join tbl_category c
      on b.categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
      union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_bookmarket b left join tbl_category c
      on b.categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
      union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, b.boardNo, b.fk_boardKindNo, b.subject, nvl(c.categoryName, '일반') as categoryName from tbl_board_etcmarket b left join tbl_category c
      on b.categoryNo = c.categoryNo
      where status = 1) aa
      where rno between 1 and 6
      
      
      union all 
      
      select boardNo, fk_boardKindNo, subject, categoryName
      from (
      select row_number() over (order by regDate desc) as rno, boardNo, fk_boardKindNo, subject, '일반' as categoryName from TBL_BOARD_ANONYMOUS
      where status = 1) aa
      where rno between 1 and 6)
      order by fk_boardKindNo
	
	</select>
	
	
	
	
	<!-- // 로그인 하는 경우 한명의 회원을 불러오기 -->
	<select id="getLoginUser" resultType="com.project.skyuniversity.ash.model.CommuMemberVO" parameterType="HashMap">
		select commuMemberNo, fk_memberNo, fk_levelNo, nickname, point, m.name, m.email
		from tbl_commu_member c
		join
			(select memberno, name, email
			from tbl_member
			where memberno = #{id} and pwd = #{pwd}
		) m
		on c.fk_memberNo = m.memberno
	
	</select>
	
	<!-- 로그인 한 유저의 등급정보를 알아오기!! -->
	<select id="getLoginUserLevel" resultType="com.project.skyuniversity.ash.model.CommuMemberLevelVO" parameterType="com.project.skyuniversity.ash.model.CommuMemberVO">
		select levelno, levelName, levelPoint, levelImg
		from tbl_commu_member_level
		where levelNo = ${fk_levelNo}
	</select>
	
	
	<!-- 닉넴 업뎃 요청한 놈 요청 들어주기 -->
	<update id="updateNicknameEnd" parameterType="HashMap">
		update tbl_commu_member set nickname = #{nickname}
		where commuMemberNo = #{commuMemberNo}
	</update>
	
	<resultMap type="HashMap" id="MarketCategoryList">
		<id column="categoryNo" 	property="categoryNo" />
		<id column="fk_boardKindNo" property="fk_boardKindNo" />
		<id column="categoryName" 	property="categoryName" />
	
	</resultMap>
	
	<!-- // === 장터 게시판 리스트 페이지 요청시 카테고리 목록 가져오기=== // -->
	<select id="getMarketCategoryList" parameterType="HashMap" resultMap="MarketCategoryList">
		select categoryNo, fk_boardKindNo, categoryName
		from tbl_category
		where fk_boardKindNo = to_number(#{boardKindNo})
		order by categoryNo
	</select>
	
	<!-- // === 장터 게시판 리스트 페이지 요청시 카테고리 목록 가져오기 관리자버전=== // -->
	<select id="getAdminMarketCategoryList" resultMap="MarketCategoryList">
		select categoryNo, fk_boardKindNo, categoryName
		from tbl_category
		where fk_boardKindNo = 0
		order by categoryNo
	</select>
	
	
	<resultMap type="HashMap" id="MarketTableInfo">
		<id column="boardKindNo" 	property="boardKindNo" />
		<id column="boardTypeNo" property="boardTypeNo" />
		<id column="boardName" 	property="boardName" />
	</resultMap>
	
	<!-- // === 장터 게시판 리스트 페이지 요청시 테이블 정보 가져오기 === // -->
	<select id="getMarketTableInfo" parameterType="HashMap" resultMap="MarketTableInfo">
		select boardKindNo, boardTypeNo, boardName
		from tbl_boardkind
		where boardKindNo = #{boardKindNo}
	</select>
	
	
	
	
	
	<!-- // === 게시판 별 총 게시물 건수 알아오기 === // -->
	<select id="getHouseTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board_housemarket e join tbl_commu_member m
		on e.fk_commuMemberNo = m.commuMemberNo
		where status = 1
		<if test='categoryNo != "" '>
        and e.categoryNo = #{categoryNo}
        </if>
		<if test='searchWord != "" '>
        and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
        </if>
	</select>
	
	<select id="getBookTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board_bookmarket e join tbl_commu_member m
		on e.fk_commuMemberNo = m.commuMemberNo
		where status = 1
		<if test='categoryNo != "" '>
        and e.categoryNo = #{categoryNo}
        </if>
		<if test='searchWord != "" '>
        and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
        </if>
	</select>
	
	<select id="getEtcTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board_etcmarket e join tbl_commu_member m
		on e.fk_commuMemberNo = m.commuMemberNo
		where status = 1
		<if test='categoryNo != "" '>
		and e.categoryNo = #{categoryNo}
        </if>
		<if test='searchWord != "" '>
        and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
        </if>
		
	</select>
	
	
	
	
	
	
	
	
	<!-- // === 게시판 번호와 시작 게시글 번호, 끝 게시글 번호를 입력하여 해당 게시판번호에 해당하는 게시글들을 불러오기 === // -->
	
	<select id="getHouseBoardList" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select rno, boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject 
                 , content, readCount, status, writerIp, fileName, orgFileName, fileSize
                 , regDate, editDate, price
                 
                 , categoryName
                 
                 , commuMemberNo, fk_memberNo, fk_levelNo, nickname, point
                 
                 , levelNo, levelName, levelPoint, levelImg
                 
                 , boardKindNo, boardTypeNo, boardName
                 , upCount, cmtCount
		from 
			(
			    select row_number() over(order by e.status desc, boardNo desc)  as rno, e.boardNo, e.fk_boardKindNo, e.fk_commuMemberNo
	                 , e.categoryNo, e.subject, e.price
	                 , e.content, e.readCount, e.status, e.writerIp, e.fileName, e.orgFileName, e.fileSize
	                 , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
                , to_char(editDate, 'yyyy-mm-dd hh24:mi:ss') as editDate
	                 
	                 , c.categoryName
	                 
	                 , m.commuMemberNo, m.fk_memberNo, m.fk_levelNo, m.nickname, m.point
	                 
	                 , l.levelNo, l.levelName, l.levelPoint, l.levelImg
	                 
	                 , k.boardKindNo, k.boardTypeNo, k.boardName
	                 
	                 , nvl(g.upCount, 0) as upCount
	                 
	                 , (select count(*) from tbl_comment_housemarket where status = 1 and fk_boardNo = e.boardNo) as cmtCount
	                 
			    from tbl_board_housemarket e join tbl_category c  
			    on e.categoryNo =  c.categoryNo
			    join tbl_commu_member m 
			    on e.fk_commuMemberNo = m.commuMemberNo
	            join tbl_commu_member_level l
	            on m.fk_levelNo = l.levelNo
	            join tbl_boardkind k
	            on e.fk_boardKindNo = k.boardKindNo
	            left join (select fk_boardNo, count(*) as upCount
                    from tbl_board_good
                    where fk_boardKindNo = #{boardKindNo}
                    group by fk_boardNo
                ) g
            	on  e.boardNo = g.fk_boardNo
			    where e.status = 1
	            <if test='categoryNo != "" '>
	            and e.categoryNo = #{categoryNo}
		        </if>
			    <if test='searchWord != "" '>
	            and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		        </if>
			)T
		where rno between #{startRno} and #{endRno}
		order by rno asc
	</select>
	
	<select id="getBookBoardList" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select rno, boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject 
                 , content, readCount, status, writerIp, fileName, orgFileName, fileSize
                 , regDate, editDate, price
                 
                 , categoryName
                 
                 , commuMemberNo, fk_memberNo,  fk_levelNo, nickname, point
                 
                 , levelNo, levelName, levelPoint, levelImg
                 
                 , boardKindNo, boardTypeNo, boardName
                 , upCount, cmtCount
		from 
			(
			    select row_number() over(order by e.status desc, boardNo desc)  as rno, e.boardNo, e.fk_boardKindNo, e.fk_commuMemberNo
	                 , e.categoryNo, e.subject, e.price
	                 , e.content, e.readCount, e.status, e.writerIp, e.fileName, e.orgFileName, e.fileSize
	                 , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
                , to_char(editDate, 'yyyy-mm-dd hh24:mi:ss') as editDate
	                 
	                 , c.categoryName
	                 
	                 , m.commuMemberNo, m.fk_memberNo, m.fk_levelNo, m.nickname, m.point
	                 
	                 , l.levelNo, l.levelName, l.levelPoint, l.levelImg
	                 
	                 , k.boardKindNo, k.boardTypeNo, k.boardName
	                 
	                 , nvl(g.upCount, 0) as upCount
	                 , (select count(*) from tbl_comment_bookmarket where status = 1 and fk_boardNo = e.boardNo) as cmtCount
			    from tbl_board_bookmarket e join tbl_category c  
			    on e.categoryNo =  c.categoryNo
			    join tbl_commu_member m 
			    on e.fk_commuMemberNo = m.commuMemberNo
	            join tbl_commu_member_level l
	            on m.fk_levelNo = l.levelNo
	            join tbl_boardkind k
	            on e.fk_boardKindNo = k.boardKindNo
	            left join (select fk_boardNo, count(*) as upCount
                    from tbl_board_good
                    where fk_boardKindNo = #{boardKindNo}
                    group by fk_boardNo
                ) g
            	on  e.boardNo = g.fk_boardNo
			    where e.status = 1
	            <if test='categoryNo != "" '>
	            and e.categoryNo = #{categoryNo}
		        </if>
			    <if test='searchWord != "" '>
	            and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		        </if>
			)T
		where rno between #{startRno} and #{endRno}
		order by rno asc
	</select>
	
	<select id="getEtcBoardList" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select rno, boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject 
                 , content, readCount, status, writerIp, fileName, orgFileName, fileSize
                 , regDate, editDate, price
                 
                 , categoryName
                 
                 , commuMemberNo, fk_memberNo, fk_levelNo, nickname, point
                 
                 , levelNo, levelName, levelPoint, levelImg
                 
                 , boardKindNo, boardTypeNo, boardName
                 , upCount, cmtCount
		from 
			(
			    select row_number() over(order by e.status desc, boardNo desc)  as rno, e.boardNo, e.fk_boardKindNo, e.fk_commuMemberNo
	                 , e.categoryNo, e.subject, e.price
	                 , e.content, e.readCount, e.status, e.writerIp, e.fileName, e.orgFileName, e.fileSize
	                 , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
                , to_char(editDate, 'yyyy-mm-dd hh24:mi:ss') as editDate
	                 
	                 , c.categoryName
	                 
	                 , m.commuMemberNo, m.fk_memberNo, m.fk_levelNo, m.nickname, m.point
	                 
	                 , l.levelNo, l.levelName, l.levelPoint, l.levelImg
	                 
	                 , k.boardKindNo, k.boardTypeNo, k.boardName
	                 , nvl(g.upCount, 0) as upCount
	                 , (select count(*) from tbl_comment_etcmarket where status = 1 and fk_boardNo = e.boardNo) as cmtCount
			    from tbl_board_etcmarket e join tbl_category c  
			    on e.categoryNo =  c.categoryNo
			    join tbl_commu_member m 
			    on e.fk_commuMemberNo = m.commuMemberNo
	            join tbl_commu_member_level l
	            on m.fk_levelNo = l.levelNo
	            join tbl_boardkind k
	            on e.fk_boardKindNo = k.boardKindNo
	            left join (select fk_boardNo, count(*) as upCount
                    from tbl_board_good
                    where fk_boardKindNo = #{boardKindNo}
                    group by fk_boardNo
                ) g
            	on  e.boardNo = g.fk_boardNo
			    where e.status = 1
	            <if test='categoryNo != "" '>
	            and e.categoryNo = #{categoryNo}
		        </if>
			    <if test='searchWord != "" '>
	            and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		        </if>
			)T
		where rno between #{startRno} and #{endRno}
		order by rno asc
	</select>
	
	
	
	
	
	
	
	<select id="checkBoardKindNo" resultType="int" parameterType="String">
		select count(*)
        from tbl_boardkind
        where boardKindNo = #{boardKindNo}
	</select>
	
	
	
	
	
	
	
	
	<insert id="marketHouseAdd" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		insert into tbl_board_housemarket(boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject, regDate, content, readCount, status, writerIp, price)
		values(tbl_board_housemarket_seq.nextval, #{fk_boardKindNo}, #{fk_commuMemberNo}, #{categoryNo}, #{subject}, default, #{content}, default, default, #{writerIp}, #{price})
		
	</insert>
	<insert id="marketBookAdd" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		insert into tbl_board_bookmarket(boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject, regDate, content, readCount, status, writerIp, price)
		values(tbl_board_bookmarket_seq.nextval, #{fk_boardKindNo}, #{fk_commuMemberNo}, #{categoryNo}, #{subject}, default, #{content}, default, default, #{writerIp}, #{price})
		
	</insert>
	<insert id="markeEtcAdd" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		insert into tbl_board_etcmarket(boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject, regDate, content, readCount, status, writerIp, price)
		values(tbl_board_etcmarket_seq.nextval, #{fk_boardKindNo}, #{fk_commuMemberNo}, #{categoryNo}, #{subject}, default, #{content}, default, default, #{writerIp}, #{price})
		
	</insert>
	
	
	
	
	
	
	
	<insert id="marketHouseaAddFile" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		insert into tbl_board_housemarket(boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject, regDate, content, readCount, status, writerIp, price, fileName, orgFileName, fileSize)
		values(tbl_board_housemarket_seq.nextval, #{fk_boardKindNo}, #{fk_commuMemberNo}, #{categoryNo}, #{subject}, default, #{content}, default, default, #{writerIp}, #{price}, #{fileName}, #{orgFileName}, #{fileSize})
		
		
	</insert>
	<insert id="marketBookAddFile" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		insert into tbl_board_bookmarket(boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject, regDate, content, readCount, status, writerIp, price, fileName, orgFileName, fileSize)
		values(tbl_board_bookmarket_seq.nextval, #{fk_boardKindNo}, #{fk_commuMemberNo}, #{categoryNo}, #{subject}, default, #{content}, default, default, #{writerIp}, #{price}, #{fileName}, #{orgFileName}, #{fileSize})
		
	</insert>
	<insert id="markeEtcAddFile" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		insert into tbl_board_etcmarket(boardNo, fk_boardKindNo, fk_commuMemberNo, categoryNo, subject, regDate, content, readCount, status, writerIp, price, fileName, orgFileName, fileSize)
		values(tbl_board_etcmarket_seq.nextval, #{fk_boardKindNo}, #{fk_commuMemberNo}, #{categoryNo}, #{subject}, default, #{content}, default, default, #{writerIp}, #{price}, #{fileName}, #{orgFileName}, #{fileSize} )
		
		
	</insert>
	
	
	<update id="marketPointPlus" parameterType="HashMap">
    	update tbl_commu_member set point = point + to_number(#{addPoint})
		where commuMemberNo = #{fk_commuMemberNo}
    </update>
	
	
	
	<select id="getLevelNo" parameterType="HashMap" resultType="String">
		select levelNo
		from tbl_commu_member_level
		where trunc(${point} , -3)  <![CDATA[ < ]]>= levelPoint and levelPoint  <![CDATA[ < ]]>= ${point}
	</select>
	
	
	<update id="levelUp">
		update tbl_commu_member set fk_levelNo = #{levelNo}
		where commuMemberNo = #{fk_commuMemberNo}
	</update>
	
	
	
	<!-- //======= 한개의 글의 디테일을 가지고 오는 것! ============// -->
	<select id="getHouseMarketView" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select e.boardNo, e.fk_boardKindNo, e.fk_commuMemberNo
	                 , e.categoryNo, e.subject, e.price
	                 , e.content, e.readCount, e.status, e.writerIp, e.fileName, e.orgFileName, e.fileSize
	                 , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
                , to_char(editDate, 'yyyy-mm-dd hh24:mi:ss') as editDate
	                 
	                 , c.categoryName
	                 
	                 , m.commuMemberNo, m.fk_levelNo, m.nickname, m.point
	                 
	                 , l.levelNo, l.levelName, l.levelPoint, l.levelImg
	                 
	                 , k.boardKindNo, k.boardTypeNo, k.boardName
	                 
			    from tbl_board_housemarket e join tbl_category c  
			    on e.categoryNo =  c.categoryNo
			    join tbl_commu_member m 
			    on e.fk_commuMemberNo = m.commuMemberNo
	            join tbl_commu_member_level l
	            on m.fk_levelNo = l.levelNo
	            join tbl_boardkind k
	            on e.fk_boardKindNo = k.boardKindNo
			    where e.status = 1 and boardNo = #{boardNo}
	
	</select>
	
	<select id="getBookMarketView" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select e.boardNo, e.fk_boardKindNo, e.fk_commuMemberNo
	                 , e.categoryNo, e.subject, e.price
	                 , e.content, e.readCount, e.status, e.writerIp, e.fileName, e.orgFileName, e.fileSize
	                , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
                , to_char(editDate, 'yyyy-mm-dd hh24:mi:ss') as editDate
	                 
	                 , c.categoryName
	                 
	                 , m.commuMemberNo, m.fk_levelNo, m.nickname, m.point
	                 
	                 , l.levelNo, l.levelName, l.levelPoint, l.levelImg
	                 
	                 , k.boardKindNo, k.boardTypeNo, k.boardName
	                 
			    from tbl_board_bookmarket e join tbl_category c  
			    on e.categoryNo =  c.categoryNo
			    join tbl_commu_member m 
			    on e.fk_commuMemberNo = m.commuMemberNo
	            join tbl_commu_member_level l
	            on m.fk_levelNo = l.levelNo
	            join tbl_boardkind k
	            on e.fk_boardKindNo = k.boardKindNo
			    where e.status = 1 and boardNo = #{boardNo}
	
	</select>
	
	<select id="getEtcMarketView" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
		select e.boardNo, e.fk_boardKindNo, e.fk_commuMemberNo
	                 , e.categoryNo, e.subject, e.price
	                 , e.content, e.readCount, e.status, e.writerIp, e.fileName, e.orgFileName, e.fileSize
	                , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
                , to_char(editDate, 'yyyy-mm-dd hh24:mi:ss') as editDate
	                 
	                 , c.categoryName
	                 
	                 , m.commuMemberNo, m.fk_levelNo, m.nickname, m.point
	                 
	                 , l.levelNo, l.levelName, l.levelPoint, l.levelImg
	                 
	                 , k.boardKindNo, k.boardTypeNo, k.boardName
	                 
			    from tbl_board_etcmarket e join tbl_category c  
			    on e.categoryNo =  c.categoryNo
			    join tbl_commu_member m 
			    on e.fk_commuMemberNo = m.commuMemberNo
	            join tbl_commu_member_level l
	            on m.fk_levelNo = l.levelNo
	            join tbl_boardkind k
	            on e.fk_boardKindNo = k.boardKindNo
			    where e.status = 1 and boardNo = #{boardNo}
	
	</select>
	
	<!-- //======= 조회수를 올려블게 ============// -->
	
	<update id="setHouseReadCount" parameterType="HashMap">
		update tbl_board_housemarket set readCount = readCount + 1 
		where boardNo = #{boardNo}
	</update>
	
	<update id="setBookReadCount" parameterType="HashMap">
		update tbl_board_bookmarket set readCount = readCount + 1 
		where boardNo = #{boardNo}
	</update>
	
	<update id="setEtcReadCount" parameterType="HashMap">
		update tbl_board_etcmarket set readCount = readCount + 1 
		where boardNo = #{boardNo}
	</update>
	
	
	
	
	
	<!-- // 글 수정 레스기릿 파일 없다 -->
	
	<update id="marketHouseaEdit" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		update tbl_board_housemarket set categoryNo = #{categoryNo}, subject = #{subject}, editDate = sysdate, content = #{content}, price = #{price}
		where boardNo = #{boardNo}
	</update>	
	<update id="marketBookEdit" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		update tbl_board_bookmarket set categoryNo = #{categoryNo}, subject = #{subject}, editDate = sysdate, content = #{content}, price = #{price}
		where boardNo = #{boardNo}
	</update>	
	<update id="markeEtcEdit" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		update tbl_board_etcmarket set categoryNo = #{categoryNo}, subject = #{subject}, editDate = sysdate, content = #{content}, price = #{price}
		where boardNo = #{boardNo}
	</update>	
	
	
	
	
	
	
	
	<!-- // // 글 수정 레스기릿 파일 첨부 있다 -->
	
	
	<update id="marketHouseaEditFile" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		update tbl_board_housemarket set categoryNo = #{categoryNo}, subject = #{subject}, editDate = sysdate, content = #{content}, price = #{price}, fileName = #{fileName}, orgFileName = #{orgFileName}, fileSize = #{fileSize}
		where boardNo = #{boardNo}
	</update>	
	<update id="marketBookEditFile" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		update tbl_board_bookmarket set categoryNo = #{categoryNo}, subject = #{subject}, editDate = sysdate, content = #{content}, price = #{price}, fileName = #{fileName}, orgFileName = #{orgFileName}, fileSize = #{fileSize}
		where boardNo = #{boardNo}
	</update>	
	<update id="markeEtcEditFile" parameterType="com.project.skyuniversity.ash.model.MarketBoardVO">
		update tbl_board_etcmarket set categoryNo = #{categoryNo}, subject = #{subject}, editDate = sysdate, content = #{content}, price = #{price}, fileName = #{fileName}, orgFileName = #{orgFileName}, fileSize = #{fileSize}
		where boardNo = #{boardNo}
	</update>	
	
	
	
	
	
	<!-- //======= 글을 삭제해 볼게~ ============// -->
	
	<update id="marketHouseBoardDelete" parameterType="HashMap">
		update tbl_board_housemarket set status = 0
   		where boardNo = #{boardNo}
	</update>
	
	<update id="marketBookBoardDelete" parameterType="HashMap">
		update tbl_board_bookmarket set status = 0
   		where boardNo = #{boardNo}
	</update>
	
	<update id="marketEtcBoardDelete" parameterType="HashMap">
		update tbl_board_etcmarket set status = 0
   		where boardNo = #{boardNo}
	</update>



	<!-- // 좋아요 싫어요 숫자 받아오기~~~ -->
	
	<select id="getMarketBoardGoodCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board_good
		where fk_boardKindNo = #{boardKindNo} and fk_boardNo = #{boardNo}
	</select>
	
	<select id="getMarketBoardBadCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board_bad
		where fk_boardKindNo = #{boardKindNo} and fk_boardNo = #{boardNo}
	</select>




	<!-- 비추천 테이블에서 paraMap으로 넘어온 값을 가진 행을 삭제한다. -->
	<delete id="getMaketBoardBad" parameterType="HashMap">
		delete from tbl_board_bad
		where fk_boardKindNo = #{boardKindNo} and fk_boardNo = #{boardNo} and fk_memberNo = #{memberNo}
	</delete>


	<!-- 추천 테이블에 행을 추가한다. -->
	<insert id="addMaketBoardUp" parameterType="HashMap">
		insert into tbl_board_good
		values(#{boardKindNo}, #{boardNo}, #{memberNo})
	</insert>
	
	
	
	<!-- 추천 테이블에서 paraMap으로 넘어온 값을 가진 행을 삭제한다. -->
	<delete id="getMaketBoardGood" parameterType="HashMap">
		delete from tbl_board_good
		where fk_boardKindNo = #{boardKindNo} and fk_boardNo = #{boardNo} and fk_memberNo = #{memberNo}
	</delete>


	<!-- 비추천 테이블에 행을 추가한다. -->
	<insert id="addMaketBoardDown" parameterType="HashMap">
		insert into tbl_board_bad
		values(#{boardKindNo}, #{boardNo}, #{memberNo})
	</insert>
	
	<!-- // 신고다 신고!! -->
	<insert id="addMarketBoardReport" parameterType="HashMap">
      insert into tbl_board_report
      values(#{boardKindNo}, #{boardNo}, #{memberNo})
   </insert>
	
	<select id="getMarketReportCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board_report
		where fk_boardKindNo = #{boardKindNo} and fk_boardNo = #{boardNo}
	</select>
	
	
	
	<!-- // === 장터 게시판 리스트 페이지 요청시 테이블 정보 가져오기 === // -->
	<select id="getAllBoardList" resultMap="MarketTableInfo">
		select boardKindNo, boardTypeNo, boardName
        from tbl_boardkind
	</select>
	
	
	<!-- 관리자 글쓰기지롱 -->
	<insert id="allBoardAdminAdd" parameterType="com.project.skyuniversity.ash.model.NoticeVO">
		insert into tbl_notice(noticeNo, fk_boardKindNo, subject, content, writerIp)
		values(tbl_notice_seq.nextval, #{fk_boardKindNo}, #{subject}, #{content}, #{writerIp})
	</insert>
	
	
	<!-- 	// 공지리스트 컴컴 -->
	<select id="getNoticeList" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.NoticeVO">
		select n.noticeNo, n.fk_boardKindNo, n.fk_memberNo, n.fk_categoryNo
		, n.subject, case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate, n.content, n.readCount, n.status, n.writerIp
		
		, c.categoryName
		
		, m.commuMemberNo, m.fk_levelNo, m.nickname, m.point
		
		, l.levelName, l.levelPoint, l.levelImg
		
		, k.boardTypeNo, k.boardName
		
		, nvl(g.upCount, 0) as upCount
		, (select count(*) from tbl_comment_board_notice where status = 1 and fk_boardNo = n.noticeNo) as cmtCount
		
		from tbl_notice n join tbl_category c
		on n.fk_categoryNo = c.categoryNo
		join tbl_commu_member m 
		on n.fk_memberNo = m.fk_memberNo
		join tbl_commu_member_level l
		on m.fk_levelNo = l.levelNo
		join tbl_boardkind k
		on n.fk_boardKindNo = k.boardKindNo
		left join (select fk_boardNo, count(*) as upCount
		                    from tbl_board_good
		                    where fk_boardKindNo = #{boardKindNo}
		                    group by fk_boardNo
		                ) g
		on  n.noticeNo = g.fk_boardNo
		where n.status = 1 and n.fk_boardKindNo = #{boardKindNo}
		<if test="noticeNo != null">
		and noticeNo = #{noticeNo}
		</if>
		order by n.noticeNo desc
	
	</select>
	
	<update id="setNoticeReadCount" parameterType="HashMap">
		update tbl_notice set readCount = readCount + 1 
		where noticeNo = #{noticeNo}
	</update>
	
	
	
	<update id="noticeEdit" parameterType="com.project.skyuniversity.ash.model.NoticeVO">
		update tbl_notice set fk_boardKindNo = #{fk_boardKindNo}, subject = #{subject}, content = #{content}, writerIp = #{writerIp}
		where noticeNo = #{noticeNo}
	</update>
	
	
	
	
	<update id="noticeDelete" parameterType="HashMap">
		update tbl_notice set status = 0
		where noticeNo = #{noticeNo} and fk_boardKindNo = #{boardKindNo}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	 <select id="indexRecentBoardList" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
      select fk_boardKindNo, subject, regDate, boardName, boardNo
      from
      (
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_notice b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_council b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_major b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_club b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_graduate b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_critic b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_study b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_cert b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_emp b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_joboffer b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_lost b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_informal b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_polite b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_humor b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_issue b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_mbti b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_food b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_love b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_hobby b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_health b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from tbl_board_diet b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, regDate, k.boardname, boardNo from TBL_BOARD_ANONYMOUS b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      order by regDate desc
      ) V
      <![CDATA[ where rownum <= 11]]> 
    </select>
    
     <select id="indexBestBoardList" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
      select boardNo, fk_boardKindNo, subject, boardName
     from
     ( 
     select row_number() over(order by upCount desc, readCount desc) as rno, boardNo, fk_boardKindNo, subject, readCount, upCount, boardName
     from 
     (
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_NOTICE b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
      
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_COUNCIL b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_MAJOR b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_CLUB b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_GRADUATE b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_CRITIC b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_INFORMAL b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from tbl_board_polite b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_HUMOR b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_ISSUE b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_MBTI b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_FOOD b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_LOVE b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_HOBBY b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_HEALTH b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_DIET b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_STUDY b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_CERT b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_EMP b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_JOBOFFER b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, nvl(v.upCount, 0) as upCount, b.status, k.boardName
     from TBL_BOARD_LOST b
     left join 
     (
         select fk_boardKindNo, fk_boardNo, count(*) as upCount
         from tbl_board_good
         group by fk_boardKindNo, fk_boardNo
     ) v 
     on b.fk_boardKindNo = v.fk_boardKindNo and b.boardNo = v.fk_boardNo
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     
     union all
     
     select b.boardNo, b.fk_boardKindNo, b.subject, b.readCount, b.upCount, b.status, k.boardName
     from TBL_BOARD_ANONYMOUS b
     join tbl_boardkind k
     on b.fk_boardkindno = k.boardkindno
     ) ee
     where status = 1
     ) 
     where rno <![CDATA[ < ]]>= 11
    </select> 
    
     <select id="indexPopularBoardList" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
      select fk_boardKindNo, subject, readCount, boardName, boardNo
      from
      (
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_notice b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_council b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_major b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_club b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_graduate b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_critic b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_study b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_cert b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_emp b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_joboffer b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_lost b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_informal b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_polite b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_humor b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_issue b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_mbti b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_food b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_love b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_hobby b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_health b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_diet b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_ANONYMOUS b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      order by readCount desc
      ) V
      <![CDATA[ where rownum <= 11]]>
    </select>
	
	
	
	<select id="getSearchBoardList" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO">
	select fk_boardKindNo, subject, boardName, boardNo
     from
     (
     select row_number() over (order by fk_boardKindNo) as rno, fk_boardKindNo, subject, boardName, boardNo
      from
      (
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_notice b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_council b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_major b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_club b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_graduate b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_critic b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_study b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_cert b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_emp b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_joboffer b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_lost b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_informal b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_polite b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_humor b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_issue b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_mbti b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_food b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_love b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_hobby b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_health b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_diet b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_housemarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_bookmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_etcmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_ANONYMOUS b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      ) V
    where lower(subject) like '%' || lower(#{searchWord}) || '%'
    ) tt
    where rno between #{start} and #{end}
	</select>
	
	
	
	
	<select id="getAnTotalHitCount" parameterType="HashMap" resultType="int">
		select count(*)
      from
      (
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_notice b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_council b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_major b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_club b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_graduate b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_critic b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_study b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_cert b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_emp b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_joboffer b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_lost b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_informal b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_polite b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_humor b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_issue b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_mbti b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_food b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_love b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_hobby b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_health b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_diet b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_housemarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_bookmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from tbl_board_etcmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      union all
      (select fk_boardkindno, subject, readCount, k.boardname, boardNo from TBL_BOARD_ANONYMOUS b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno where status = 1)
      ) V
    where lower(subject) like '%' || lower(#{searchWord}) || '%'
	
	</select>
	
	
	<select id="getNoticeCommentList" parameterType="HashMap" resultType="com.project.skyuniversity.ohyoon.model.CommentVO">
		select rno, commentNo, fk_boardNo, fk_memberNo, fk_nickname
		     , levelImg, cmtContent, regDate
		     , (select count(*) from tbl_comment_board_notice where status = 1 and fk_boardNo = #{noticeNo}) AS totalCount
		from 
		(
		    select row_number() over(order by commentNo desc) AS rno, V.commentNo, V.fk_boardNo
		         , V.fk_memberNo, M.nickname AS fk_nickname, L.levelImg, cmtContent
		         , case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
			from tbl_commu_member M join tbl_comment_board_notice V  
			on V.fk_memberNo = M.fk_memberNo
			join tbl_commu_member_level L
		    on M.fk_levelNo = L.levelNo
			where V.status = 1 and fk_boardNo = #{noticeNo}
		)T
		where rno between #{startNo} and #{endNo}
		order by rno asc
	</select>
	
	
	<insert id="addNoticeComment" parameterType="com.project.skyuniversity.ohyoon.model.CommentVO">
		insert into tbl_comment_board_notice(commentNo, fk_boardNo, fk_memberNo, cmtContent, writerIp)
		values(tbl_comment_board_notice_seq.nextval, ${fk_boardNo}, ${fk_memberNo}, #{cmtContent}, #{writerIp})
	</insert>
	
	<update id="deleteNoticeComment" parameterType="HashMap">
		update tbl_comment_board_notice set status = 0
		where fk_boardNo = #{fk_boardNo} and commentNo = #{commentNo}
	</update>
	
	<update id="updateNoticeComment" parameterType="HashMap">
		update tbl_comment_board_notice set cmtContent = #{cmtContent}
		where fk_boardNo = #{fk_boardNo} and commentNo = #{commentNo}
	</update>
	
	
	
	
	
	<select id="getMyBoardList" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.MarketBoardVO" >
	select fk_boardKindNo, subject, readCount, boardName, boardNo, fk_memberNo, categoryName, cmtCount
	, case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
	, upCount, content
from
(
select row_number() over (order by ${colName} <if test="colName != 'fk_boardKindNo'">desc</if><if test="colName == 'fk_boardKindNo'">asc, regDate </if>) as rno, fk_boardKindNo, subject, readCount, boardName, boardNo, fk_memberNo, categoryName, cmtCount, regDate, upCount, content
    from
    (
    (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
    	, (select count(*) from tbl_comment_notice where status = 1 and fk_boardNo = b.boardNo) as cmtCount, b.regDate
    	, (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
    	from tbl_board_notice b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_council where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_council b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_major where status = 1 and fk_boardNo = b.boardNo) as cmtCount, b.regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_major b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_club where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_club b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all 
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_graduate where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_graduate b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo =#{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_critic where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_critic b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_study where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_study b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_cert where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_cert b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo =#{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_emp where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_emp b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_joboffer where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_joboffer b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_lost where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from TBL_BOARD_lost b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_informal where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_informal b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_polite where status = 1 and fk_boardNo = b.boardNo) as cmtCount,  regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_polite b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_humor where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_humor b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_issue where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_issue b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_mbti where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_mbti b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_food where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_food b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_love where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_love b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_hobby where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_hobby b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_health where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_health b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_diet where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_diet b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_commuMemberNo,  nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      , (select count(*) from tbl_comment_housemarket where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_housemarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.categoryNo where status = 1 and fk_commuMemberNo = #{commuMemberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_commuMemberNo,  nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_bookmarket where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_bookmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.categoryNo where status = 1 and fk_commuMemberNo = #{commuMemberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_commuMemberNo,  nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      , (select count(*) from tbl_comment_etcmarket where status = 1 and fk_boardNo = b.boardNo) as cmtCount, regDate
      , (select count(*) from tbl_board_good where fk_boardKindNo = b.fk_boardKindNo and fk_boardNo = boardNo) as upCount
      from tbl_board_etcmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno 
      left join tbl_category c on c.categoryNo = b.categoryNo
      where status = 1 and fk_commuMemberNo = #{commuMemberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      )
      ) w
      where rno between #{start} and #{end}
	</select>
	
	
	
	<select id="getTotalCountForMyPage" parameterType="com.project.skyuniversity.ash.model.CommuMemberVO" resultType="int"  >
	select count(*)
    from
    (
    (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
    	from tbl_board_notice b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from tbl_board_council b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from TBL_BOARD_major b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from TBL_BOARD_club b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all 
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from TBL_BOARD_graduate b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo =#{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_critic b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from TBL_BOARD_study b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from TBL_BOARD_cert b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo =#{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from TBL_BOARD_emp b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from tbl_board_joboffer b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from TBL_BOARD_lost b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_informal b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_polite b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_humor b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_issue b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_mbti b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_food b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from tbl_board_love b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from tbl_board_hobby b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_health b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_memberNo, nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_diet b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.fk_categoryNo where status = 1 and fk_memberNo = #{fk_memberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_commuMemberNo,  nvl(categoryName, '일반') as categoryName , to_char(b.content) as content
      from tbl_board_housemarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.categoryNo where status = 1 and fk_commuMemberNo = #{commuMemberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_commuMemberNo,  nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_bookmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.categoryNo where status = 1 and fk_commuMemberNo = #{commuMemberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      union all
      
      (select b.fk_boardKindNo, b.subject, b.readCount, k.boardname, b.boardNo, b.fk_commuMemberNo,  nvl(categoryName, '일반') as categoryName, to_char(b.content) as content
      from tbl_board_etcmarket b
      join tbl_boardkind k on b.fk_boardkindno = k.boardkindno left join tbl_category c on c.categoryNo = b.categoryNo where status = 1 and fk_commuMemberNo = #{commuMemberNo} and regDate <![CDATA[ >]]>= sysdate - 13)
      )
	</select>
	
	
	<select id="getAllNoticeList" resultType="com.project.skyuniversity.ash.model.NoticeVO">
		select n.noticeNo, n.fk_boardKindNo, n.fk_memberNo, n.fk_categoryNo
		, n.subject
		, case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
		, n.content, n.readCount, n.status, n.writerIp
		
		, c.categoryName
		
		, m.commuMemberNo, m.fk_levelNo, m.nickname, m.point
		
		, l.levelName, l.levelPoint, l.levelImg
		
		, k.boardTypeNo, k.boardName
		
		, (select count(*) from tbl_comment_board_notice where status = 1 and fk_boardNo = n.noticeNo) as cmtCount
		
		from tbl_notice n join tbl_category c
		on n.fk_categoryNo = c.categoryNo
		join tbl_commu_member m 
		on n.fk_memberNo = m.fk_memberNo
		join tbl_commu_member_level l
		on m.fk_levelNo = l.levelNo
		join tbl_boardkind k
		on n.fk_boardKindNo = k.boardKindNo
		where n.status = 1
		
	</select>
	
	<select id="getAllNoticeListWithParam" parameterType="HashMap" resultType="com.project.skyuniversity.ash.model.NoticeVO">
		select noticeNo, fk_boardKindNo, fk_memberNo, fk_categoryNo
		, subject
		, case when to_char(sysdate , 'yyyymmdd') - to_char(regDate , 'yyyymmdd') >= 1 then to_char(regDate, 'yyyy-mm-dd')
                when to_char(sysdate, 'hh24') - to_char(regDate, 'hh24') >= 1 then to_char(to_char(sysdate, 'hh24') - to_char(regDate, 'hh24'))||'시간 전'
                else to_char(to_char(sysdate, 'mi') - to_char(regDate, 'mi'))||'분 전' end as regDate
		, content, readCount, status, writerIp
		, categoryName
		, commuMemberNo, fk_levelNo, nickname, point
		, levelName, levelPoint, levelImg
		, boardTypeNo, boardName
		,cmtCount
		from
		(
		select n.noticeNo, n.fk_boardKindNo, n.fk_memberNo, n.fk_categoryNo
		, n.subject, n.regDate, n.content, n.readCount, n.status, n.writerIp
		
		, c.categoryName
		
		, m.commuMemberNo, m.fk_levelNo, m.nickname, m.point
		
		, l.levelName, l.levelPoint, l.levelImg
		
		, k.boardTypeNo, k.boardName
		
		, (select count(*) from tbl_comment_board_notice where status = 1 and fk_boardNo = n.noticeNo) as cmtCount
		
		from tbl_notice n join tbl_category c
		on n.fk_categoryNo = c.categoryNo
		join tbl_commu_member m 
		on n.fk_memberNo = m.fk_memberNo
		join tbl_commu_member_level l
		on m.fk_levelNo = l.levelNo
		join tbl_boardkind k
		on n.fk_boardKindNo = k.boardKindNo
		where n.status = 1
		<if test="colName == 'fk_boardKindNo'">order by ${colName} asc</if>
		<if test="colName != 'fk_boardKindNo'">order by ${colName} desc</if>
		)
	</select>
	
	<select id="getLoginuserFromHs" resultType="com.project.skyuniversity.ash.model.CommuMemberVO" parameterType="String">
		select commuMemberNo, fk_memberNo, fk_levelNo, nickname, point, m.name, m.email
		from tbl_commu_member c
		join
			(select memberno, name, email
			from tbl_member
		) m
		on c.fk_memberNo = m.memberno
        where fk_memberNo = #{fk_memberNo}
	</select>
</mapper>
